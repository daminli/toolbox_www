/*
 * File: app/view/Login.js
 * 
 * This file was generated by Sencha Architect version 2.2.1.
 * http://www.sencha.com/products/architect/
 * 
 * This file requires use of the Ext JS 4.2.x library, under independent
 * license. License of Sencha Architect does not include license for Ext JS
 * 4.2.x. For more details see http://www.sencha.com/license or contact
 * license@sencha.com.
 * 
 * This file will be auto-generated each and everytime you save your project.
 * 
 * Do NOT hand edit this file.
 */

Ext.define('main.view.Login', {
	extend : 'Ext.container.Viewport',

	buttons : true,

	initComponent : function() {
		var me = this;
		Ext.applyIf(me, {
					items : [{
								xtype : 'form',
								frame : true,
								height : 186,
								width : 353,
								layout : {
									type : 'auto'
								},
								bodyPadding : 20,
								title : 'Login',
								items : [{
											xtype : 'textfield',
											margin : '0,0,5,0',
											fieldLabel : 'User Name',
											msgTarget : 'under',
											name : 'userName',
											allowBlank : false,
											emptyText : 'user name'
										}, {
											xtype : 'textfield',
											margin : '0,0,5,0',
											fieldLabel : 'Password',
											msgTarget : 'under',
											name : 'password',
											inputType : 'password',
											allowBlank : false,
											emptyText : 'password',
											enableKeyEvents : true,
											listeners : {
												keypress : {
													fn : me.onTextfieldKeypress,
													scope : me
												}
											}
										}, {
											xtype : 'label'
										}],
								dockedItems : [{
											xtype : 'toolbar',
											dock : 'bottom',
											formBind : false,
											items : [{
														xtype : 'hiddenfield',
														width : 150,
														fieldLabel : 'Label'
													}, {
														xtype : 'button',
														formBind : true,
														width : 100,
														text : 'Submit',
														listeners : {
															click : {
																fn : me.onButtonClick,
																scope : me
															}
														}
													}]
										}]
							}],
					listeners : {
						resize : {
							fn : me.onViewportResize,
							scope : me
						}
					}
				});

		me.callParent(arguments);
	},

	onTextfieldKeypress : function(textfield, e, eOpts) {

		if (e.getKey() == e.ENTER) {
			this.validLogin();
		}

	},

	onButtonClick : function(button, e, eOpts) {
		this.validLogin();
	},

	onViewportResize : function(component, width, height, oldWidth, oldHeight,
			eOpts) {
		loginForm = this.items.getAt(0);
		offsets = [20, 20];
		align = 'c-c';
		loginForm.alignTo(this, align, offsets);
	},

	validLogin : function() {
		loginForm = this.items.getAt(0);
		if (!loginForm.isValid())
			return;
		loginForm.getForm().submit({
			url : APP_ROOT+'/user_security/valid_login',
			method : 'POST',
			success : function(form, action) {
				var redirect = action.result.redirect;
				window.location = redirect;
			},
			failure : function(form, action) {
				if (action.failureType == SERVER_INVALID) {
					cmpPassword = loginForm.getForm().findField("password");
					cmpPassword.markInvalid(action.result.errors.reason);
				}
				if (action.failureType == CONNECT_FAILURE) {
					Ext.Msg.alert('Warning!',
							'Authentication server is unreachable!');
					loginForm.getForm().reset();
				}

			}
		});
	}

});