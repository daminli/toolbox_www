/*
 * File: app/controller/Navigation.js
 * 
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 * 
 * This file requires use of the Ext JS 4.2.x library, under independent
 * license. License of Sencha Architect does not include license for Ext JS
 * 4.2.x. For more details see http://www.sencha.com/license or contact
 * license@sencha.com.
 * 
 * This file will be auto-generated each and everytime you save your project.
 * 
 * Do NOT hand edit this file.
 */

Ext.define('common.controller.DataSource', {
	extend : 'Ext.app.Controller',

	views : ['DataSource'],
	models : ['DataSource'],
	stores : ['DataSource'],

	init : function(application) {
		me = this;
		this.control({
					"#DataSourceGrid" : {
						selectionchange : function(row, records, eOpts) {
							if (records.length > 0) {
								datasource_form = Ext.ComponentQuery
										.query("#datasource_form")[0].form;
								datasource_form.setValues(records[0].data);
							}
						}
					},
					"#btnSave" : {
						click : function(btn, e, eOpts) {
							datasource_form = Ext.ComponentQuery
									.query("#datasource_form")[0].form;
							btn.disable();
							datasource_form.submit({
										url : APP_ROOT+'/common/datasources',
										method : 'POST',
										waitMsg : "save is running",
										success : function(form, action) {
											me.getStore("DataSource").load();
											btn.enable();
										},
										failure : function(form, action) {
											if (action.failureType == SERVER_INVALID) {
												Ext.Msg.alert('Warning!',
														'data save faild');
											}
											if (action.failureType == CONNECT_FAILURE) {
												Ext.Msg
														.alert('Warning!',
																'Server is unreachable!');
											}
											btn.enable();
										}
									});
						}
					},
					"#btnDelete" : {
						click : function(btn, e, eOpts) {
							datasource_form = Ext.ComponentQuery
									.query("#datasource_form")[0].form;
							datasource_form.setValues({
										password : '123456'
									});
							btn.disable();
							datasource_form.submit({
										url : APP_ROOT+'/common/datasources',
										method : 'DELETE',
										waitMsg : "delete is running",
										success : function(form, action) {
											me.getStore("DataSource").load();
											datasource_form.reset();
											btn.enable();
										},
										failure : function(form, action) {
											if (action.failureType == SERVER_INVALID) {
												Ext.Msg.alert('Warning!',
														'data delete faild');
											}
											if (action.failureType == CONNECT_FAILURE) {
												Ext.Msg
														.alert('Warning!',
																'Server is unreachable!');
											}
											btn.enable();
										}
									});
						}
					},
					"#btnTest" : {
						click : function(btn, e, eOpts) {
							datasource_form = Ext.ComponentQuery
									.query("#datasource_form")[0].form;
							data = datasource_form.getValues();
							btn.disable();
							datasource_form.submit({
										url : APP_ROOT+'/common/datasources',
										method : 'PUT',
										waitMsg : "test is running",
										success : function(form, action) {
											btn.enable();
											Ext.Msg
													.alert('Warning!',
															'data source connect success!');
										},
										failure : function(form, action) {
											if (action.failureType == SERVER_INVALID) {
												Ext.Msg
														.alert(
																'Warning!',
																'datasource connection test faild \n'
																		+ action.result.data);
											}
											if (action.failureType == CONNECT_FAILURE) {
												Ext.Msg
														.alert('Warning!',
																'Server is unreachable!');
											}
											btn.enable();
										}
									});
						}
					}
				});
	},

	onLaunch : function() {

		this.getStore("DataSource").load();

	}
});
