/*
 * File: app/controller/Navigation.js
 * 
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 * 
 * This file requires use of the Ext JS 4.2.x library, under independent
 * license. License of Sencha Architect does not include license for Ext JS
 * 4.2.x. For more details see http://www.sencha.com/license or contact
 * license@sencha.com.
 * 
 * This file will be auto-generated each and everytime you save your project.
 * 
 * Do NOT hand edit this file.
 */

Ext.define('free_query.controller.CreateReport', {
	extend : 'Ext.app.Controller',

	models : ['Folder', 'Reports', 'ReportProp'],
	stores : ['Reports', 'ReportProp', 'FolderTree'],
	views : ['CreateReport', 'ReportInfoPanel', 'ReportPropPanel', 'EditReport'],
	requires : [ 'Ext.ux.TreePicker'],
	onLaunch : function() {
		me = this;
		reportinfo = Ext.ComponentQuery.query("#createReportInfo")[0];
		if (reportinfo && reportinfo.hasOwnProperty('report_id')
				&& reportinfo.report_id) {
			me.mode = 'edit';
			me.report_id = reportinfo.report_id;
			me.getStore('Reports').load({
				params : {
					id : me.report_id
				},
				callback : function(records, operation, success) {
					report_form = Ext.ComponentQuery.query("#reportInfo_form")[0].form;
					report_form.loadRecord(records[0]);
					report_query = Ext.ComponentQuery.query("#report_query")[0].form;
					report_query.loadRecord(records[0]);
				}
			});
			me.getStore('ReportProp').load({
						params : {
							report_id : this.report_id
						}
					});
		} else {
			me.mode = 'create';
		}
	},
	onRefreshProp : function(me, report_id) {
		Ext.Ajax.request({
					url : APP_ROOT+"/free_query/refresh_report_props?report_id="
							+ report_id,
					success : function(response, config) {
						me.getStore('ReportProp').load({
									params : {
										report_id : report_id
									}
								});
					}
				})
	},
	init : function(application) {
		me = this;
		this.control({
			"#next" : {
				click : function(btn, e, eOpts) {
					report_form = Ext.ComponentQuery.query("#reportInfo_form")[0].form;
					btn.disable();
					report_form.submit({
								url : APP_ROOT+'/free_query/save_report',
								method : 'POST',
								waitMsg : "save is running",
								success : function(form, action) {
									// me.getStore("DataSource").load();
									btn.enable();
									me.report_id = action.result.data.id;

									report_form = Ext.ComponentQuery
											.query("#report_query")[0].form;
									report_form.loadRecord(Ext.create(
											'free_query.model.Reports',
											action.result.data));
									if (me.mode == 'create') {
										me.onRefreshProp(me, me.report_id);
										create_report = Ext.ComponentQuery
												.query("#CreateReportView")[0];
										create_report.getLayout()
												.setActiveItem(1);
									}
									if (me.mode == 'edit') {

										edit_tabs = Ext.ComponentQuery
												.query("#EditReportView tabpanel")[0];
										edit_tabs.setActiveTab(edit_tabs.down('ReportPropPanel'));
									}
								},
								failure : function(form, action) {
									if (action.failureType == SERVER_INVALID) {
										Ext.Msg.alert('Warning!',
												'data save faild');
									}
									if (action.failureType == CONNECT_FAILURE) {
										Ext.Msg.alert('Warning!',
												'Server is unreachable!');
									}
									btn.enable();
								}
							});

				}
			},
			"#refresh_props" : {
				click : function(btn, e, eOpts) {
					me = this;
					report_query = Ext.ComponentQuery.query("#report_query")[0].form;
					btn.disable();
					report_query.submit({
								url : APP_ROOT+'/free_query/save_report',
								method : 'POST',
								waitMsg : "save is running",
								success : function(form, action) {
									btn.enable();
									// me.getStore("DataSource").load();
									report_form = Ext.ComponentQuery
											.query("#reportInfo_form")[0].form;
									report_form.loadRecord(Ext.create(
											'free_query.model.Reports',
											action.result.data));

									report_id = action.result.data.id;
									me.onRefreshProp(me, report_id);
								},
								failure : function(form, action) {
									if (action.failureType == SERVER_INVALID) {
										Ext.Msg.alert('Warning!',
												'data save faild');
									}
									if (action.failureType == CONNECT_FAILURE) {
										Ext.Msg.alert('Warning!',
												'Server is unreachable!');
									}
									btn.enable();
								}
							});
				}
			},
			"#ReportPropGrid" : {
				edit : function(editor, context, eOpts) {
					this.getStore('ReportProp').sync();
				}
			}
		});
	}

});
