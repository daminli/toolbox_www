/*
 * File: app/controller/Navigation.js
 * 
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 * 
 * This file requires use of the Ext JS 4.2.x library, under independent
 * license. License of Sencha Architect does not include license for Ext JS
 * 4.2.x. For more details see http://www.sencha.com/license or contact
 * license@sencha.com.
 * 
 * This file will be auto-generated each and everytime you save your project.
 * 
 * Do NOT hand edit this file.
 */

	Ext.define('free_query.controller.ViewReport', {
		extend : 'Ext.app.Controller',
	
		models : ['Folder', 'Reports'],
		stores : [ 'Reports', 'FolderTree', 'Folder'],
	views : ['ViewReport', 'SearchReport', 'ShowReport', 'ReportForm',
			'FolderForm'],
	requires : [ 'Ext.ux.TreePicker'],

	onFolderSelect : function(dataview, record, item, index, e, eOpts) {
		me.folder_id = record.data.id;
		this.getStore("Reports").load({
					params : {
						folder_id : record.data.id
					},
					scope : this
				});
		this.getStore("Folder").load({
			params : {
				folder_id : record.data.id
			},
			scope : this,
			callback : function(records, operation, success) {
				// console.log(records);
				Ext.ComponentQuery.query("#ReportFolderForm")[0]
						.loadRecord(records[0]);
			}
		});

		infopanel = Ext.ComponentQuery.query("#infopanel")[0];
		infopanel.getLayout().setActiveItem(0);
	},

	onLaunch : function() {
		this.getStore("Reports").load({
					params : [{
								folder_id : 1
							}]
				});
		btnSave = Ext.ComponentQuery.query('folderform button[text=Save]')[0];
	},
	reloadFolder : function(response, opts) {
		Ext.ComponentQuery.query("#NavigationPanel")[0].store.load();
		Ext.ComponentQuery.query("#ReportFolderForm")[0].folderStore.load();
		Ext.ComponentQuery.query("#ReportInfoForm")[0].folderStore.load();
	},

	init : function(application) {
		this.control({
			"#NavigationPanel" : {
				itemclick : this.onFolderSelect
			},
			"#ReportGrid" : {
				selectionchange : function(gridpanel, selected, eOpts) {
					me = this;
					var rec = selected[0];

					if (rec) {
						me.report_id = rec.data.id;
						me.report_name = rec.data.display_name;
						infopanel = Ext.ComponentQuery.query("#infopanel")[0];
						infopanel.getLayout().setActiveItem(1);
						Ext.ComponentQuery.query("#ReportInfoForm")[0]
								.loadRecord(rec);
					}
				},
				itemdblclick : function(gridpanel, record, item, index, e,
						eOpts) {
					var vrTabpanel = Ext.ComponentQuery
							.query("#viewReportTabpanel")[0];
					var newPage = Ext.create("free_query.view.ShowReport", {
								title : record.data.display_name,
								report_id : record.data.id,
								closable : true,
								autoScroll : true,
								frame : true,
								scripts : true
							});
					vrTabpanel.add(newPage);
					vrTabpanel.show();
					vrTabpanel.setActiveTab(newPage);
				}
			},
			"folderform button[text=Save]" : {
				click : function(btn) {
					me = this;
					folder_form = Ext.ComponentQuery.query("#ReportFolderForm")[0].form;
					folder_form.submit({
								url : APP_ROOT+'/free_query/save_folder',
								method : 'POST',
								waitMsg : "save is running",
								success : me.reloadFolder,
								failure : function(form, action) {
									if (action.failureType == SERVER_INVALID) {
										Ext.Msg.alert('Warning!',
												'data save faild');
									}
									if (action.failureType == CONNECT_FAILURE) {
										Ext.Msg.alert('Warning!',
												'Server is unreachable!');
									}
								}
							});
				}
			},
			"folderform button[text=Delete]" : {
				click : function(btn) {
					me = this;
					Ext.MessageBox.confirm('Confirm',
							'Are you sure you want to delete the folder?',
							function(btn) {
								if (btn == 'no') {
									return;
								}
								folder_form = Ext.ComponentQuery
										.query("#ReportFolderForm")[0].form;
								id = folder_form.getValues().id;
								Ext.Ajax.request({
											url : APP_ROOT+'/free_query/delete_folder',
											params : {
												id : id
											},
											callback : function(options,
													success, response) {
												resp = Ext.JSON
														.decode(response.responseText);
												if (resp.success) {
													me.reloadFolder();
												} else {
													Ext.Msg.alert('Warning!',
															resp.data.error);
												}
											},
											failure : function(response, opts) {
												alert('failue');
											}
										});

							});

				}
			},
			"folderform button[text=Create]" : {
				click : function(btn) {
					me = this;
					Ext.MessageBox.prompt('Create Folder',
							'Please enter folder name:', function(btn, text) {
								folder_form = Ext.ComponentQuery
										.query("#ReportFolderForm")[0].form;
								parent_id = (folder_form.getValues().id == '')
										? 1
										: folder_form.getValues().id;
								Ext.Ajax.request({
											url : APP_ROOT+'/free_query/save_folder',
											params : {
												name : text,
												parent_id : parent_id
											},
											success : me.reloadFolder
										});
							})
				}
			},
			"reportform button[text=Edit]" : {
				click : function(btn) {
					me = this;
					var vrTabpanel = Ext.ComponentQuery
							.query("#viewReportTabpanel")[0];
					var newPage = Ext.create('Ext.panel.Panel', {
						title : 'Edit (' + me.report_name + ')',
						closable : true,
						autoScroll : true,
						frame : false,
						scripts : true,
						html : " <iframe scrolling='auto' frameborder='0'  width='100%' height='100%' src='/extpage/free_query/EditReport/?report_id="
								+ me.report_id + "'> </iframe>"
					});
					vrTabpanel.add(newPage);
					vrTabpanel.show();
					vrTabpanel.setActiveTab(newPage);
				}
			},
			"reportform button[text=Open]" : {
				click : function(btn) {
					me = this;
					
					var vrTabpanel = Ext.ComponentQuery
							.query("#viewReportTabpanel")[0];
					var newPage = Ext.create("free_query.view.ShowReport", {
								title : me.report_name,
								report_id : me.report_id,
								closable : true,
								autoScroll : true,
								frame : true,
								scripts : true
							});
					vrTabpanel.add(newPage);
					vrTabpanel.show();
					vrTabpanel.setActiveTab(newPage);
				}
			},
			"reportform button[text=Delete]" : {
				click : function(btn) {
					me = this;
					Ext.MessageBox.confirm('Confirm',
							'Are you sure you want to delete the report?',
							function(btn) {
								if (btn == 'no') {
									return;
								}
								report_form = Ext.ComponentQuery
										.query("#ReportInfoForm")[0].form;
								id = report_form.getValues().id;
								Ext.Ajax.request({
									url : APP_ROOT+'/free_query/delete_report',
									params : {
										id : id
									},
									callback : function(options, success,
											response) {
										resp = Ext.JSON
												.decode(response.responseText);
										if (resp.success) {
											me.getStore('Reports').load({
														params : {
															folder_id : me.folder_id
														}
													});
										} else {
											Ext.Msg.alert('Warning!',
													resp.data.error);
										}
									},
									failure : function(response, opts) {
										alert('failue');
									}
								});

							});

				}
			}
		});

	}

});
